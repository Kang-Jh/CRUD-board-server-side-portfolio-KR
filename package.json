{
  "name": "server",
  "version": "0.0.0",
  "description": "book review community server",
  "main": "./src/app.ts",
  "config": {
    "s3BucketName": "",
    "region": "ap-northeast-2",
    "cloudFormationStackName": "",
    "functionName": "",
    "domain": ""
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "dev": "nodemon --exec ts-node src/app.ts",
    "start": "node dist/app.js",
    "local": "node dist/scripts/local.js",
    "invoke-lambda": "cross-var aws lambda invoke --function-name $npm_package_config_functionName --region $npm_package_config_region --payload file://api-gateway-event.json lambda-invoke-response.json && cat lambda-invoke-response.json",
    "create-bucket": "cross-var aws s3 mb s3://$npm_package_config_s3BucketName --region $npm_package_config_region",
    "delete-bucket": "cross-var aws s3 rb s3://$npm_package_config_s3BucketName --region $npm_package_config_region",
    "package": "cross-var aws cloudformation package --template ./sam-template.yaml --s3-bucket $npm_package_config_s3BucketName --output-template sam-template.packaged.yaml --region $npm_package_config_region",
    "deploy": "cross-var aws cloudformation deploy --template-file sam-template.packaged.yaml --stack-name $npm_package_config_cloudFormationStackName --capabilities CAPABILITY_IAM --region $npm_package_config_region --parameter-overrides DomainName=$npm_package_config_domain",
    "package-deploy": "npm run package && npm run deploy",
    "delete-stack": "cross-var aws cloudformation delete-stack --stack-name $npm_package_config_cloudFormationStackName --region $npm_package_config_region",
    "setup": "npm install && npm install --prefix ./src ./ && (cross-var aws s3api get-bucket-location --bucket $npm_package_config_s3BucketName --region $npm_package_config_region || npm run create-bucket) && npm run package-deploy"
  },
  "author": "",
  "license": "MIT",
  "private": true,
  "dependencies": {
    "@vendia/serverless-express": "^4.0.0-rc.5",
    "aws-sdk": "^2.809.0",
    "cookie-parser": "^1.4.5",
    "cors": "^2.8.5",
    "csurf": "^1.11.0",
    "debug": "^4.2.0",
    "dompurify": "^2.2.4",
    "dotenv": "^8.2.0",
    "express": "^4.17.1",
    "google-auth-library": "^6.1.3",
    "helmet": "^4.2.0",
    "http-errors": "^1.8.0",
    "jsdom": "^16.4.0",
    "jsonwebtoken": "^8.5.1",
    "mongodb": "^3.6.3",
    "ms": "^2.1.3",
    "multer": "^1.4.2",
    "node-fetch": "^2.6.1",
    "uuid": "^8.3.2",
    "validator": "^13.5.1"
  },
  "devDependencies": {
    "@types/cookie-parser": "^1.4.2",
    "@types/cors": "^2.8.8",
    "@types/csurf": "^1.9.36",
    "@types/debug": "^4.1.5",
    "@types/dompurify": "^2.0.4",
    "@types/dotenv": "^8.2.0",
    "@types/express": "^4.17.9",
    "@types/http-errors": "^1.8.0",
    "@types/jsdom": "^16.2.5",
    "@types/jsonwebtoken": "^8.5.0",
    "@types/mongodb": "^3.5.34",
    "@types/ms": "^0.7.31",
    "@types/multer": "^1.4.5",
    "@types/node": "^14.14.6",
    "@types/node-fetch": "^2.5.7",
    "@types/uuid": "^8.3.0",
    "@types/validator": "^13.1.1",
    "@typescript-eslint/eslint-plugin": "^4.6.1",
    "@typescript-eslint/parser": "^4.6.1",
    "cross-var": "^1.1.0",
    "eslint": "^7.12.1",
    "nodemon": "^2.0.6",
    "ts-node": "^9.0.0",
    "typescript": "^4.0.5"
  }
}
